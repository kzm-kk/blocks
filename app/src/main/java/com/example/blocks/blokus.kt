package com.example.blocks

val initblokus = arrayOf(
    //line  0             1             2             3             4             5             6
    //row   0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6
    arrayOf(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),//1,block1
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),//2,block2
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,1,6,1,0,0,0,0,0,0,0,0,0),//3,block3
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,1,0,0,0,6,2,2,6,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),//4
    arrayOf(0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,1,6,1,0,0,0,0,0,0,0,0,0),//5,block4
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,6,2,2,6,0,0,0,6,2,2,6,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),//6
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,6,2,6,1,0,0,0,6,2,2,6,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0),//7
    arrayOf(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,1,6,2,6,1,0,0,6,2,2,2,6,0,0,1,6,6,6,1,0,0,0,0,0,0,0,0),//8
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,1,0,0,0,6,2,2,6,0,0,0,1,6,2,6,0,0,0,0,1,6,1,0,0,0,0,0,0,0,0),//9
    arrayOf(0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,1,6,1,0,0),//10,block5
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,1,0,0,0,6,2,2,6,0,0,0,6,2,2,6,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0),//11
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,1,6,2,6,1,0,0,6,2,2,2,6,0,0,1,6,2,6,1,0,0,0,1,6,1,0,0,0,0,0,0,0,0,0),//12
    arrayOf(0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,6,1,0,0,6,2,2,2,6,0,0,1,6,6,2,6,0,0,0,0,1,6,1,0,0,0,0,0,0,0,0),//13
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,1,6,2,6,1,0,0,6,2,2,2,6,0,0,1,6,6,6,1,0,0,0,0,0,0,0,0),//14
    arrayOf(0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,6,2,6,6,1,0,0,6,2,2,2,6,0,0,1,6,6,6,1,0,0,0,0,0,0,0,0),//15
    arrayOf(0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,0,6,2,6,0,0,0,0,6,2,6,1,0,0,0,6,2,2,6,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0),//16
    arrayOf(0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,1,0,0,0,6,2,2,6,1,0,0,1,6,2,2,6,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0),//17
    arrayOf(0,0,0,0,0,0,0,0,1,6,1,6,1,0,0,6,2,6,2,6,0,0,6,2,2,2,6,0,0,1,6,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),//18
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,0,0,0,1,6,2,6,0,0,0,6,2,2,6,0,0,0,6,2,6,1,0,0,0,1,6,1,0,0,0),//19
    arrayOf(0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,6,2,2,6,1,0,0,1,6,2,2,6,0,0,0,6,2,6,1,0,0,0,1,6,1,0,0,0,0,0,0,0,0,0),//20
    arrayOf(0,0,0,0,0,0,0,0,0,1,6,1,0,0,0,0,6,2,6,1,0,0,0,6,2,2,6,0,0,0,6,2,6,1,0,0,0,6,2,6,0,0,0,0,1,6,1,0,0) //21
    //row   0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6
    //line  0             1             2             3             4             5             6
)

class blokus(num:Int){
    public var data = Array(7, {i -> Array(7, {i -> 0})})
    private var usable = true
    init {
        for(i in 0..6){
            for(j in 0..6){
                data[i][j] = initblokus[num][i * 7 + j]
            }
        }
    }
    fun getUsable() :Boolean {
        return usable
    }
    fun setUsable(bool:Boolean){
        usable = bool
    }
}

var parts = Array(2,{Array(21,{ i -> blokus(i)})})

